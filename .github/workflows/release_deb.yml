name: "Release DEB package"

on:
  release:
    types:
      - published
env:
  QT_VERSION: 5.15.0
jobs:
  aur:
    name: "Release DEB package"
    runs-on: "ubuntu-16.04"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Get version
        run: |
          echo ::set-env name=VERSION::$(echo $(git describe --tags --long | cut -d- -f1 | sed 's/^v//'))
          a=${VERSION%.*}.
          b=$(<.ci/STABLE_VERSION)
          if [[ "$a" == "$b" ]]; then
            echo ::set-env name=ISBETA::false
          else
            echo ::set-env name=ISBETA::true
          fi
                 
      - name: Install Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      
      - name: Restore Qt from cache
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: Qt-ubuntu-16.04-${{ env.QT_VERSION }}

      - name: Set up Qt environment
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          version: ${{ env.QT_VERSION }}

      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release -j2
          
      - name: Deploy
        run: |
          sudo apt install libxcb*
          cd build/
          wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt*.AppImage
          ./linuxdeployqt*.AppImage ./cpeditor -qmake=../../Qt/${{ env.QT_VERSION }}/gcc_64/bin/qmake
          
      - name: Preparing application files' directory
        run: |
          mkdir -p cpeditor_${VERSION}_amd64/usr/share/
          cd cpeditor_${VERSION}_amd64/usr/share/

          mkdir applications/  
          mv /home/runner/work/cpeditor/cpeditor/.ci/linux/cpeditor.desktop ./applications

          mkdir -p cpeditor/bin/
          mv /home/runner/work/cpeditor/cpeditor/.ci/DEB/cpeditor.sh ./cpeditor/
          mv /home/runner/work/cpeditor/cpeditor/build/plugins/ ./cpeditor
          mv /home/runner/work/cpeditor/cpeditor/build/cpeditor ./cpeditor/bin/

          mkdir -p doc/cpeditor/
          mv /home/runner/work/cpeditor/cpeditor/.ci/DEB/copyright ./doc/cpeditor/

          mkdir icons/
          mv /home/runner/work/cpeditor/cpeditor/.ci/linux/cpeditor-icon.png ./icons/cpeditor.png

          mv /home/runner/work/cpeditor/cpeditor/build/translations/ ./cpeditor

          cd ../
          mkdir -p lib/cpeditor/
          mv /home/runner/work/cpeditor/cpeditor/build/lib/* ./lib/cpeditor
      
      - name: Preapiring and setting DEBIAN version control directory
        run: |
          cd cpeditor_${VERSION}_amd64
          mv /home/runner/work/cpeditor/cpeditor/.ci/DEB/DEBIAN .
          wget -c "http://archive.ubuntu.com/ubuntu/pool/universe/h/hashdeep/md5deep_4.4-4_all.deb"
          wget -c "http://archive.ubuntu.com/ubuntu/pool/universe/h/hashdeep/hashdeep_4.4-4_amd64.deb"
          sudo apt install ./*.deb
          rm *.deb
          md5deep -rl usr/ > ./DEBIAN/md5sums
          cd DEBIAN
          chmod 775 p*
          sed -i "s/\${ver}/$VERSION/" control
          SIZE=$(du -s ../../cpeditor_${VERSION}_amd64/ | cut -f1)
          sed -i "s/\${size}/${SIZE}/" control

      - name: Build .deb
        run: |
          cd /home/runner/work/cpeditor/cpeditor/
          fakeroot dpkg-deb --build cpeditor_${VERSION}_amd64
          
      - name: Release .deb
        uses: softprops/action-gh-release@v1
        with:
          files: /home/runner/work/cpeditor/cpeditor/cpeditor_${{ env.VERSION }}_amd64.deb
          name: CP Editor ${{ env.VERSION }}
          draft: true
          prerelease: ${{ env.ISBETA }}
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

